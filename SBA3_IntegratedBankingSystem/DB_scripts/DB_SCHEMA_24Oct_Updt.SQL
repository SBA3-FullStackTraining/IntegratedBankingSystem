
CREATE TABLE LOGIN
(USER_LOGIN_ID VARCHAR(20) NOT NULL,
USER_PASSWORD VARCHAR(20),
ACCOUNT_ID VARCHAR(16)
PRIMARY KEY(USER_LOGIN_ID ),
FOREIGN KEY(ACCOUNT_ID ) 
       REFERENCES ACCOUNT (ACCOUNT_ID ));

CREATE TABLE ACCOUNT 
(
ACCOUNT_ID VARCHAR(16) NOT NULL,
ACCOUNT_BALANCE DECIMAL(10,2),
ACCOUNT_TYPE_ID INT(10),
ACCOUNT_TYPE_DESCR VARCHAR (50),
PRIMARY KEY (ACCOUNT_ID),
FOREIGN KEY(ACCOUNT_TYPE_ID  ) 
       REFERENCES ACCOUNT_TYPE(ACCOUNT_TYPE_ID ) );

CREATE TABLE ACCOUNT_TYPE(
ACCOUNT_TYPE_ID INT(10) NOT NULL,
ACCOUNT_TYPE_DESCR VARCHAR(50),
PRIMARY KEY (ACCOUNT_TYPE_ID));


CREATE TABLE BANK 
(
BANK_ID VARCHAR(10) NOT NULL,
BANK_ADDRESS VARCHAR(300)
PRIMARY KEY (BANK_ID));

CREATE TABLE BANK_BRANCHES
(
BRANCH_ID VARCHAR(10) NOT NULL,
BANK_ID VARCHAR(10),
BRANCH_ADDRESS VARCHAR(300),
PRIMARY KEY (BRANCH_ID ),
FOREIGN KEY(BANK_ID  ) 
       REFERENCES BANK (BANK_ID  ));


CREATE TABLE CUSTOMER (
CUSTOMER_ID VARCHAR (16) NOT NULL,
ACCOUNT_ID VARCHAR(16),
CUSTOMER_ADDRESS1 VARCHAR(30),
CUSTOMER_ADDRESS2 VARCHAR(30),
CUSTOMER_ADDRESS3 VARCHAR(30),
CUSTOMER_FIRSTNAME VARCHAR (20),
CUSTOMER_LASTNAME VARCHAR (20),
CUSTOMER_MIDDLENAME VARCHAR (20),
CITY VARCHAR(20),
STATE VARCHAR(20),
ZIPCODE INT(10),
EMAIL_ADDRESS VARCHAR(60),
MOBILEPHONE INT(10),
HOME_PHONE INT(10),
PAN_AADHAR VARCHAR(15),
USER_LOGIN_ID VARCHAR(20),

PRIMARY KEY(CUSTOMER_ID),
FOREIGN KEY(USER_LOGIN_ID  ) 
       REFERENCES LOGIN(USER_LOGIN_ID  ));


CREATE TABLE PERSON_DETAILS (
APPLICATION_ID INT(20) NOT NULL,
FIRSTNAME VARCHAR (20),
LASTNAME VARCHAR (20),
MIDDLENAME VARCHAR (20),
PAN_AADHAR VARCHAR(15),
EMAIL_ADDRESS VARCHAR(60),
MOBILEPHONE INT(10),
HOME_PHONE INT(10),
EMP_ID INT(10),
PRIMARY KEY (APPLICATION_ID),
FOREIGN KEY(EMP_ID) 
	REFERENCES EMPLOYEE (EMP_ID)
);

CREATE TABLE EMPLOYEE(
EMP_ID INT(15) NOT NULL,
BRANCH_ID VARCHAR(10),
EMP_NAME VARCHAR(20),
APPLICATION_ID INT (20),
APPLICATION_TYPE VARCHAR(20), --- CREDIT CARD/DEBIT CARD/LOAD/SERVICE PROVIDER APPLICATION
APPROVE_DETAILS VARCHAR(3),

PRIMARY KEY (EMP_ID),
FOREIGN KEY (APPLICATION_ID )
	REFERENCES PERSON_DETAILS  (APPLICATION_ID),
FOREIGN KEY (APPLICATION_ID )
	REFERENCES LOAN (APPLICATION_ID) ,
FOREIGN KEY (APPLICATION_ID )
	REFERENCES CREDIT_DEBIT_CARD (APPLICATION_ID),
FOREIGN KEY (APPLICATION_ID )
	REFERENCES PERSON_DETAILS  (APPLICATION_ID)
);

CREATE GENERATE_APPROVAL_EMAIL
(
APPROVE_DETAILS VARCHAR(3) NOT NULL,  ---- YES/NO
EMAIL_SEND VARCHAR(3), -- YES/NO
APPLICATION_ID INT(20) NOT NULL,
EMAIL_ADDRESS VARCHAR(60) NOT NULL,
FOREIGN KEY (APPLICATION_ID) 
	REFERENCES EMPLOYEE (APPLICATION_ID),
FOREIGN KEY (EMAIL_ADDRESS) 
	REFERENCES PERSON_DETAILS (EMAIL_ADDRESS) ,
FOREIGN KEY (COMPANY_EMAIL_ADDRESS) 
	REFERENCES SERVICE_PROVIDER (COMPANY_EMAIL_ADDRESS)
);



CREATE TABLE TRANSACTION
(
TRANSACTION_ID INT(20) NOT NULL,
ACCOUNT_ID VARCHAR(16),
SERVICE_PROVIDER_ID INT(20),  -----SERVICE PROVIDER LIKE BILLDESK ETC.
TRANSACTION_TYPE VARCHAR(10),
TRANSACTION_DATE DATETIME NOT NULL,
TRANSACTION_AMOUNT DECIMAL(8,2),
LOAN_ID INT(10),
CREDIT_CARD_ID INT(10),
PRIMARY KEY (TRANSACTION_ID),
FOREIGN KEY (ACCOUNT_ID) 
	REFERENCES ACCOUNT(ACCOUNT_ID),
FOREIGN KEY (LOAN_ID) 
	REFERENCES LOAN(LOAN_ID),
FOREIGN KEY (CREDIT_CARD_ID) 
	REFERENCES CREDIT_CARD(CREDIT_CARD_ID),
FOREIGN KEY (SERVICE_PROVIDER_ID) 
	REFERENCES SERVICE_PROVIDER(SERVICE_PROVIDER_ID)

);

CREATE TABLE LOAN
(
LOAN_ID INT (10), NOT NULL,
ACCOUNT_ID VARCHAR(16),
APPLICATION_ID INT(20) NOT NULL,
LOAN_AMOUNT_AVAILED DECIMAL(10,2),
LOAN_PAY_TILL_DATE DECIAL(10,2),
BALANCE_PAYABLE DECIMAL(10,2),
DURATION_MONTH INT(10),
INTEREST_RATE DECIMAL( 5,2),
START_DATE DATE,
EMP_ID INT(10),
PRIMARY KEY (LOAN_ID ),
FOREIGN KEY (ACCOUNT_ID)
	 REFERENCES ACCOUNT(ACCOUNT_ID),
FOREIGN KEY (EMP_ID) 
	REFERENCES EMPLOYEE (EMP_ID)
);

CREATE TABLE CREDIT_DEBIT_CARD
(
CARD_ID INT (20) NOT NULL,
APPLICATION_ID INT(20) NOT NULL,
CARD_TYPE VARCHAR(10),
PIN INT(10), -------- PIN GENERATED FOR CREDIT CARD
ACCOUNT_ID VARCHAR(16),
CREDIT_AMOUNT_SWIPE DECIMAL(10,2),
BALANCE_PAYABLE DECIMAL(10,2),
EMP_ID INT(10),
PRIMARY KEY (CREDIT_CARD_ID ),
FOREIGN KEY (ACCOUNT_ID)
	 REFERENCES ACCOUNT(ACCOUNT_ID),
FOREIGN KEY (EMP_ID) 
	REFERENCES EMPLOYEE (EMP_ID)
) ;

CREATE TABLE SERVICE_PROVIDER
SERVICE_PROVIDER_ID INT(20) NOT NULL,
ACCOUNT_ID VARCHAR(16),
APPLICATION_ID INT(20) NOT NULL,
CUSTOMER_ADDRESS1 VARCHAR(30),
CUSTOMER_ADDRESS2 VARCHAR(30),
CUSTOMER_ADDRESS3 VARCHAR(30),
CITY VARCHAR(20),
STATE VARCHAR(20),
ZIPCODE INT(10),
COMPANY_EMAIL_ADDRESS VARCHAR(60),
PAN_AADHAR_GST VARCHAR(15)
PRIMARY KEY SERVICE_PROVIDER_ID),
FOREIGN KEY (ACCOUNT_ID) 
	REFERENCES ACCOUNT(ACCOUNT_ID),
FOREIGN KEY(EMP_ID) 
	REFERENCES EMPLOYEE (EMP_ID)
);





----------------------------------------------------------------------------------------
NOTES:
//1) TABLES TO BE CREATED FOR BENEFECIARY.
  2) ERD DIAGRAM AND EXPLANATION, COLLECT REVIEW FEEDBACK AND CHANGE TABLES IF REQUIRED

BANK --> BRANCH --> EMPLOYEE--> SEND EMAIL ON APPROVAL OF APPLICATION
BRANCH --> ACCOUNTTYPE--> ACCOUNT--> CUSTOMER/SERVICE PROVIDER--> 
TRANSACTION -->CUSTOMER --> LOAN --> CREDIT CARD-->
---- /*  BENEFICARY -- YET TO BE DONE  */

